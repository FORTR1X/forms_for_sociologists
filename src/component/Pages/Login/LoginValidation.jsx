function Validation(values) {
  let error = {};
  const email_pattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
  const password_pattern = /^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])[a-zA-Z0-9]{8,}$/;

  /*
    1. Регулярное выражение /^[^\s@]+@[^\s@]+\.[^\s@]+$/ используется для проверки 
    корректности введенного email-адреса. 
    Оно проверяет, что строка начинается с одного или более символов, 
    не являющихся пробелом или символом "@", 
    затем следует символ "@", 
    после которого идет один или более символов, 
    не являющихся пробелом или символом "@", 
    затем символ ".", и, наконец, один или более символов, 
    не являющихся пробелом или символом "@". 
    
    2. Регулярное выражение /^(?=.*\d)(?=.*[a-z])(?=.[A-Z])[a-zA-Z0-9]{8,}$/ 
    используется для проверки сложности пароля. 
    Оно проверяет, что строка 
    содержит как минимум одну цифру 
    (через positive lookahead (?=.*\d)), 
    одну строчную букву 
    (через positive lookahead (?=.*[a-z])), 
    одну заглавную букву (через positive lookahead (?=.[A-Z])) 
    и состоит из 8 или более символов из множества a-zA-Z0-9. 
    Если строка соответствует этому шаблону, 
    то она считается сложным паролем.*/

  if (values.email === "") {
    error.email = "Почта не может быть пустой";
  } else if (!email_pattern.test(values.email)) {
    error.email = "Неправильная почта";
  } else {
    error.email = "";
  }

  if (values.password === "") {
    error.password = "Пароль не может быть пустым";
  } else if (!password_pattern.test(values.password)) {
    error.password = "Плохой пароль (хороший пароль 1sF1dF1fF)";
  } else {
    error.password = "";
  }
  return error;
}

export default Validation;
